<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2152px" height="4646px" viewBox="-0.5 -0.5 2152 4646" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-12-10T10:04:17.512Z&quot; agent=&quot;5.0 (Windows)&quot; etag=&quot;k0b11FO74JPMPo7EWt55&quot; version=&quot;20.5.3&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;Ilvb0HE0Nk42wJFN983z&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><path d="M 889.74 2272.37 L 890.82 2072.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 895.09 2084.07 L 890.83 2071.05 L 886.43 2084.02" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1086" y="4300" width="183" height="94" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 185px; height: 94px; padding-top: 4300px; margin-left: 1086px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 183px; height: 94px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Actions</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">QUIT<br style="font-size: 12px;" /></p><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">SHOW_POINTS</p></div></div></div></foreignObject><text x="1086" y="4312" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="320" y="4212" width="183" height="202" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 185px; height: 202px; padding-top: 4212px; margin-left: 320px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 183px; height: 202px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Actions</b></p><hr style="font-size: 12px;" /> BUILD_CITY<br style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">BUILD_ROAD<br style="font-size: 12px;" />BUILD_SETTLEMENT<br /></p><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">END_ROUND<br style="font-size: 12px;" />QUIT<br style="font-size: 12px;" />SHOW_FIELD<br style="font-size: 12px;" />SHOW_RESOURCES<br style="font-size: 12px;" />TRADE </p></div></div></div></foreignObject><text x="320" y="4224" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="570" y="4212" width="415" height="372" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 417px; height: 372px; padding-top: 4212px; margin-left: 570px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 415px; height: 372px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">BuildAndTradePhase</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ BuildAndTradePhase(TextIO, TextTerminal&lt;?&gt;, SiedlerGame, EndPhase): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- endPhase: EndPhase {readOnly}<br style="font-size: 12px;" />- roundEnd: boolean</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- buildCity(): void<br style="font-size: 12px;" />- buildRoad(): void<br style="font-size: 12px;" />- buildSettlement(): void<br style="font-size: 12px;" />- checkIfWon(): void<br style="font-size: 12px;" />- endRound(): void<br style="font-size: 12px;" /># onEnd(): void<br style="font-size: 12px;" />+ onStart(): void<br style="font-size: 12px;" /># onUpdate(): void<br style="font-size: 12px;" />- quit(): void<br style="font-size: 12px;" />- selectResource(String): Resource<br style="font-size: 12px;" />- showField(): void<br style="font-size: 12px;" />- showResources(): void<br style="font-size: 12px;" />- trade(): void</p></div></div></div></foreignObject><text x="570" y="4224" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">BuildAndTradePhase...</text></switch></g><rect x="1160" y="1832" width="319" height="85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 321px; height: 85px; padding-top: 1832px; margin-left: 1160px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 319px; height: 85px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">CardBank</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ CardBank(HashMap&lt;Resource, Integer&gt;): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ checkResourceCountAvailability(Resource, int): int</p></div></div></div></foreignObject><text x="1160" y="1844" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">CardBank...</text></switch></g><rect x="1762" y="2414" width="231" height="109" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 233px; height: 109px; padding-top: 2414px; margin-left: 1762px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 231px; height: 109px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">City</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ City(Player): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>+ fromSettlement(Settlement): City</u><br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="1762" y="2426" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">City...</text></switch></g><rect x="639" y="60" width="630" height="502" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 632px; height: 502px; padding-top: 60px; margin-left: 639px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 630px; height: 502px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Config</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Config(): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>+ DROP_CARDS_DICE_VALUE: int {readOnly}</u><br style="font-size: 12px;" /><u>+ INITIAL_RESOURCE_CARDS_BANK: Map&lt;Resource, Integer&gt; {readOnly}</u><br style="font-size: 12px;" /><u>+ INITIAL_THIEF_POSITION: Point {readOnly}</u><br style="font-size: 12px;" /><u>+ MAX_CARDS_IN_HAND_NO_DROP: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MAX_DICE_VALUE: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MAX_NUMBER_OF_PLAYERS: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MAX_WIN_POINTS: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MAX_X_COORDINATE_VALUE: int {readOnly}<br style="font-size: 12px;" />+ MAX_Y_COORDINATE_VALUE: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MIN_COORDINATE_VALUE: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MIN_DICE_VALUE: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MIN_NUMBER_OF_PLAYERS: int {readOnly}</u><br style="font-size: 12px;" /><u>+ MIN_WIN_POINTS: int {readOnly}</u><br style="font-size: 12px;" /><u>- NUMBER_OF_CITIES_PER_PLAYER: int {readOnly}</u><br style="font-size: 12px;" /><u>- NUMBER_OF_ROADS_PER_PLAYER: int {readOnly}</u><br style="font-size: 12px;" /><u>- NUMBER_OF_SETTLEMENTS_PER_PLAYER: int {readOnly}</u><br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>+ createEmptyResourceMap(): HashMap&lt;Resource, Integer&gt; {final}</u><br style="font-size: 12px;" /><u>+ createEmptyResourcePerFactionMap(List&lt;Faction&gt;): HashMap&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt; {final}</u><br style="font-size: 12px;" /><u>+ getStandardDiceNumberPlacement(): Map&lt;Point, Integer&gt; {final}</u><br style="font-size: 12px;" /><u>+ getStandardLandPlacement(): Map&lt;Point, Land&gt; {final}</u><br style="font-size: 12px;" /><u>+ getStructuresPerPlayerAtStart(): HashMap&lt;Structure, Integer&gt; {final}</u><br /></p></div></div></div></foreignObject><text x="639" y="72" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Config...</text></switch></g><rect x="1180" y="3944" width="337" height="165" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 339px; height: 165px; padding-top: 3944px; margin-left: 1180px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 337px; height: 165px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">DiceRollPhase</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ DiceRollPhase(TextIO, TextTerminal&lt;?&gt;, SiedlerGame): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>- THIEF_ASCII_ART: String {readOnly}</u><br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># onEnd(): void<br style="font-size: 12px;" />+ onStart(): void<br style="font-size: 12px;" /># onUpdate(): void</p></div></div></div></foreignObject><text x="1180" y="3956" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">DiceRollPhase...</text></switch></g><rect x="340" y="344" width="211" height="218" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 213px; height: 218px; padding-top: 344px; margin-left: 340px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 211px; height: 218px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Edge</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Edge(Point, Point): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- end: Point<br style="font-size: 12px;" />- start: Point</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ equals(Object): boolean<br style="font-size: 12px;" />+ hashCode(): int<br style="font-size: 12px;" /><u>~ isEdge(Point, Point): boolean</u><br style="font-size: 12px;" />+ isEdgePoint(Point): boolean<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="340" y="356" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Edge...</text></switch></g><rect x="848" y="3944" width="314" height="214" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 316px; height: 214px; padding-top: 3944px; margin-left: 848px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 314px; height: 214px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">EndPhase</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ EndPhase(TextIO, TextTerminal&lt;?&gt;, SiedlerGame): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>- HAS_WON_ASCII_ART: String {readOnly}</u><br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ onEnd(): void<br style="font-size: 12px;" />+ onStart(): void<br style="font-size: 12px;" />+ onUpdate(): void<br style="font-size: 12px;" />- printWinnerSymbol(Faction): void<br style="font-size: 12px;" />- showPoints(): void<br style="font-size: 12px;" />- tryPrintWinner(): void</p></div></div></div></foreignObject><text x="848" y="3956" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">EndPhase...</text></switch></g><rect x="1740" y="304" width="182" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 184px; height: 180px; padding-top: 304px; margin-left: 1740px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 182px; height: 180px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Faction</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- Faction(String): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">BLUE<br style="font-size: 12px;" />GREEN<br style="font-size: 12px;" />RED<br style="font-size: 12px;" />YELLOW<br style="font-size: 12px;" />- name: String</p></div></div></div></foreignObject><text x="1740" y="316" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="440" y="1452" width="219" height="258" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 221px; height: 258px; padding-top: 1452px; margin-left: 440px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 219px; height: 258px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Field</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Field(Land, int): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>- THIEF_LABEL: String {readOnly}</u><br style="font-size: 12px;" />- diceValue: int {readOnly}<br style="font-size: 12px;" />- hasThief: boolean<br style="font-size: 12px;" />- land: Land {readOnly}<br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getDiceValue(): int<br style="font-size: 12px;" />+ getLand(): Land<br style="font-size: 12px;" />+ hasThief(): boolean<br style="font-size: 12px;" />+ setThief(boolean): void<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="440" y="1464" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Field...</text></switch></g><rect x="60" y="344" width="250" height="218" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 252px; height: 218px; padding-top: 344px; margin-left: 60px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 250px; height: 218px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">FieldAnnotationPosition</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ FieldAnnotationPosition(Point, Point): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- corner: Point<br style="font-size: 12px;" />- field: Point</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ equals(Object): boolean<br style="font-size: 12px;" />+ hashCode(): int<br style="font-size: 12px;" />+ isCorner(Point): boolean<br style="font-size: 12px;" />+ isField(Point): boolean<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="60" y="356" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">FieldAnnotationPosition...</text></switch></g><rect x="1310" y="3354" width="325" height="302" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 327px; height: 302px; padding-top: 3354px; margin-left: 1310px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 325px; height: 302px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><span style="font-size: 12px;"><i style=""><b>GamePhase </b>{abstract}</i></span></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ GamePhase(TextIO, TextTerminal&lt;?&gt;, SiedlerGame): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># currentFactionName: String<br style="font-size: 12px;" /># nextPhase: GamePhase<br style="font-size: 12px;" /># siedlerGame: SiedlerGame<br style="font-size: 12px;" /># textIO: TextIO<br style="font-size: 12px;" /># textTerminal: TextTerminal&lt;?&gt;</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># getCoordinateInput(String): Point<br style="font-size: 12px;" /><u># getEnumValue(TextIO, Class&lt;T&gt;, String): T</u><br style="font-size: 12px;" />+ initializeNextPhase(GamePhase): void<br style="font-size: 12px;" /># onEnd(): void<br style="font-size: 12px;" />+ onStart(): void<br style="font-size: 12px;" /># onUpdate(): void</p></div></div></div></foreignObject><text x="1310" y="3366" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">GamePhase {abstract}...</text></switch></g><rect x="160" y="634" width="344" height="772" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 346px; height: 772px; padding-top: 634px; margin-left: 160px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 344px; height: 772px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">HexBoard</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ HexBoard(): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- annotation: Map&lt;FieldAnnotationPosition, A&gt; {readOnly}<br style="font-size: 12px;" />- corner: Map&lt;Point, C&gt; {readOnly}<br style="font-size: 12px;" />- edge: Map&lt;Edge, E&gt; {readOnly}<br style="font-size: 12px;" />- field: Map&lt;Point, F&gt; {readOnly}<br style="font-size: 12px;" />- maxCoordinateX: int<br style="font-size: 12px;" />- maxCoordinateY: int</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ addField(Point, F): void<br style="font-size: 12px;" />+ addFieldAnnotation(Point, Point, A): void<br style="font-size: 12px;" />- constructEdgesOfField(Point): List&lt;Edge&gt;<br style="font-size: 12px;" /><u># getAdjacentCorners(Point): List&lt;Point&gt;</u><br style="font-size: 12px;" />+ getAdjacentEdges(Point): List&lt;E&gt;<br style="font-size: 12px;" /><u>- getAdjacentFields(Point): List&lt;Point&gt;</u><br style="font-size: 12px;" />+ getCorner(Point): C<br style="font-size: 12px;" /># getCornerCoordinates(): Set&lt;Point&gt;<br style="font-size: 12px;" /><u>- getCornerCoordinatesOfField(Point): List&lt;Point&gt;</u><br style="font-size: 12px;" />+ getCorners(): List&lt;C&gt;<br style="font-size: 12px;" />+ getCornersOfField(Point): List&lt;C&gt;<br style="font-size: 12px;" />+ getEdge(Point, Point): E<br style="font-size: 12px;" />+ getField(Point): F<br style="font-size: 12px;" />+ getFieldAnnotation(Point, Point): A<br style="font-size: 12px;" />+ getFieldAnnotationsForCorner(Point): List&lt;A&gt;<br style="font-size: 12px;" />+ getFieldAnnotationsForField(Point): List&lt;A&gt;<br style="font-size: 12px;" />+ getFields(Point): List&lt;F&gt;<br style="font-size: 12px;" />+ getFields(): List&lt;Point&gt;<br style="font-size: 12px;" />~ getMaxCoordinateX(): int<br style="font-size: 12px;" />~ getMaxCoordinateY(): int<br style="font-size: 12px;" />+ getNeighboursOfCorner(Point): List&lt;C&gt;<br style="font-size: 12px;" />+ hasCorner(Point): boolean<br style="font-size: 12px;" />+ hasEdge(Point, Point): boolean<br style="font-size: 12px;" />+ hasField(Point): boolean<br style="font-size: 12px;" /><u>~ isCorner(Point, Point): boolean</u><br style="font-size: 12px;" /><u>~ isCornerCoordinate(Point): boolean</u><br style="font-size: 12px;" /><u>~ isFieldCoordinate(Point): boolean</u><br style="font-size: 12px;" />+ setCorner(Point, C): C<br style="font-size: 12px;" />+ setEdge(Point, Point, E): void</p></div></div></div></foreignObject><text x="160" y="646" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">HexBoard...</text></switch></g><rect x="697" y="1144" width="345" height="566" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 347px; height: 566px; padding-top: 1144px; margin-left: 697px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 345px; height: 566px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">HexBoardTextView</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ HexBoardTextView(HexBoard&lt;F, C, E, A&gt;): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>- FIVE_SPACES: String {readOnly}<br style="font-size: 12px;" />- FOUR_SPACES: String {readOnly}<br style="font-size: 12px;" />- NINE_SPACES: String {readOnly}<br style="font-size: 12px;" />- ONE_SPACE: String {readOnly}<br style="font-size: 12px;" />- SEVEN_SPACES: String {readOnly}<br style="font-size: 12px;" />- SIX_SPACES: String {readOnly}<br style="font-size: 12px;" />- TWO_SPACES: String {readOnly}</u><br style="font-size: 12px;" />- board: HexBoard&lt;F, C, E, A&gt;  {readOnly}<br style="font-size: 12px;" />- defaultDiagonalEdgeDownLabel: Label {readOnly}<br style="font-size: 12px;" />- defaultDiagonalEdgeUpLabel: Label {readOnly}<br style="font-size: 12px;" />- defaultVerticalEdgeLabel: Label {readOnly}<br style="font-size: 12px;" />- emptyLabel: Label {readOnly}<br style="font-size: 12px;" />- fixedLowerFieldLabels: Map&lt;Point, Label&gt;<u></u> {readOnly}<u><br style="font-size: 12px;" /></u></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- deriveLabelFromToStringRepresentation(Object): Label<br style="font-size: 12px;" />- determineEdgeLabel(boolean, Point, Point): Label<br style="font-size: 12px;" />- getAnnotationLabel(A): Label<br style="font-size: 12px;" /># getCornerLabel(C): Label<br style="font-size: 12px;" /># getEdgeLabel(E): Label<br style="font-size: 12px;" />- getFieldLabelLower(Point): Label<br style="font-size: 12px;" /># getFieldLabelUpper(F): Label<br style="font-size: 12px;" />- printCornerLine(int): String<br style="font-size: 12px;" />- printDiagonalEdges(int): String<br style="font-size: 12px;" />- printMiddlePartOfField(int): String<br style="font-size: 12px;" />+ setLowerFieldLabel(Point, Label): void<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="697" y="1156" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">HexBoardTextView...</text></switch></g><rect x="1539" y="3944" width="322" height="189" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 324px; height: 189px; padding-top: 3944px; margin-left: 1539px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 322px; height: 189px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">InitialPhase</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ InitialPhase(TextIO, TextTerminal&lt;?&gt;, SiedlerGame): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># onEnd(): void<br style="font-size: 12px;" />+ onStart(): void<br style="font-size: 12px;" /># onUpdate(): void<br style="font-size: 12px;" />- placeInitialBuildings(boolean): void<br style="font-size: 12px;" />- placeInitialRoad(): boolean<br style="font-size: 12px;" />- placeInitialSettlement(boolean): boolean</p></div></div></div></foreignObject><text x="1539" y="3956" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">InitialPhase...</text></switch></g><rect x="900" y="744" width="250" height="220" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 252px; height: 220px; padding-top: 744px; margin-left: 900px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 250px; height: 220px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Label</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Label(char, char): <br style="font-size: 12px;" />+ Label(): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>+ DEFAULT_CHARACTER: char {readOnly}</u><br style="font-size: 12px;" />- first: char {readOnly}<br style="font-size: 12px;" />- second: char {readOnly}<br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getFirst(): char<br style="font-size: 12px;" />+ getSecond(): char<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="900" y="756" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Label...</text></switch></g><rect x="536" y="674" width="185" height="310" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 187px; height: 310px; padding-top: 674px; margin-left: 536px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 185px; height: 310px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Land</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- Land(Resource): <br style="font-size: 12px;" />- Land(String): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">DESERT<br style="font-size: 12px;" />FIELDS<br style="font-size: 12px;" />FOREST<br style="font-size: 12px;" />HILLS<br style="font-size: 12px;" />MOUNTAIN<br style="font-size: 12px;" />PASTURE<br style="font-size: 12px;" />WATER<br style="font-size: 12px;" />- name: String<br style="font-size: 12px;" />- resource: Resource</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getResource(): Resource<br /></p></div></div></div></foreignObject><text x="536" y="686" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="1517" y="974" width="438" height="416" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 416px; padding-top: 974px; margin-left: 1517px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 438px; height: 416px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Player</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Player(Faction, HashMap&lt;Resource, Integer&gt;, HashMap&lt;Structure, Integer&gt;): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- faction: Faction<br style="font-size: 12px;" /><u>- random: Random {readOnly}</u><br style="font-size: 12px;" /><u>- resourceKeys: Resource[] {readOnly}</u><br style="font-size: 12px;" />- structures: HashMap&lt;Structure, Integer&gt;<br style="font-size: 12px;" />- winPoints: int</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ addResource(Resource): void<br style="font-size: 12px;" />+ addStructure(Structure): void<br style="font-size: 12px;" />+ addWinPoints(int): void<br style="font-size: 12px;" />+ checkIfStructureAvailable(Structure): boolean<br style="font-size: 12px;" />+ dropHalfResources(): Map&lt;Resource, Integer&gt;<br style="font-size: 12px;" />+ getFaction(): Faction<br style="font-size: 12px;" />+ getStructureStock(Structure): int<br style="font-size: 12px;" />- getTotalResourceCount(): int<br style="font-size: 12px;" />+ getWinPoints(): int<br style="font-size: 12px;" />+ removeStructure(Structure): void<br style="font-size: 12px;" />+ removeWinPoints(int): void<br style="font-size: 12px;" />+ stealRandomResource(): Resource</p></div></div></div></foreignObject><text x="1517" y="986" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Player...</text></switch></g><rect x="1740" y="1844" width="210" height="167" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 212px; height: 167px; padding-top: 1844px; margin-left: 1740px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 210px; height: 167px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i><b style="font-size: 12px;">PlayerOwnedStructure </b><span style="font-size: 12px;">{abstract}</span></i></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ PlayerOwnedStructure(Player): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># owner: Player {readOnly}<br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getOwner(): Player<br style="font-size: 12px;" />+ isOwnedBy(Player): boolean<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="1740" y="1856" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">PlayerOwnedStructure {abstract}...</text></switch></g><rect x="1517" y="4404" width="178" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 180px; height: 160px; padding-top: 4404px; margin-left: 1517px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 178px; height: 160px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Program</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Program(): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">~ startPhase: GamePhase</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>+ main(String[]): void</u><br style="font-size: 12px;" />+ run(): void<br style="font-size: 12px;" />- setup(): void</p></div></div></div></foreignObject><text x="1517" y="4416" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Program...</text></switch></g><rect x="1190" y="594" width="192" height="210" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 194px; height: 210px; padding-top: 594px; margin-left: 1190px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 192px; height: 210px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Resource</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- Resource(String): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">BRICK<br style="font-size: 12px;" />GRAIN<br style="font-size: 12px;" />LUMBER<br style="font-size: 12px;" />ORE<br style="font-size: 12px;" />WOOL<br style="font-size: 12px;" />- name: String</p></div></div></div></foreignObject><text x="1190" y="606" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="1180" y="1494" width="399" height="216" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 401px; height: 216px; padding-top: 1494px; margin-left: 1180px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 399px; height: 216px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><span style="font-size: 12px;"><i style=""><b>ResourceHolder </b>{abstract}</i></span></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ ResourceHolder(HashMap&lt;Resource, Integer&gt;): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># resources: HashMap&lt;Resource, Integer&gt;</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ addResources(Map&lt;Resource, Integer&gt;): void<br style="font-size: 12px;" />+ checkIfEnoughOfAllResources(Map&lt;Resource, Integer&gt;): boolean<br style="font-size: 12px;" /># checkIfEnoughOfResource(Resource, int): boolean<br style="font-size: 12px;" />+ getResource(Resource): int<br style="font-size: 12px;" />+ getResources(): Map&lt;Resource, Integer&gt;<br style="font-size: 12px;" />+ tryRemoveResources(Map&lt;Resource, Integer&gt;): void</p></div></div></div></foreignObject><text x="1180" y="1506" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">ResourceHolder {abstract}...</text></switch></g><rect x="1510" y="2209" width="113" height="65" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 115px; height: 65px; padding-top: 2209px; margin-left: 1510px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 113px; height: 65px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Road</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Road(Player): </p></div></div></div></foreignObject><text x="1510" y="2221" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Road...</text></switch></g><rect x="1647" y="2162" width="194" height="162" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 196px; height: 162px; padding-top: 2162px; margin-left: 1647px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 194px; height: 162px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">Settlement</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ Settlement(Player): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"># payoutFactor: int<br style="font-size: 12px;" /># winPoints: int</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getPayoutFactor(): int<br style="font-size: 12px;" />+ getWinPointAmount(): int</p></div></div></div></foreignObject><text x="1647" y="2174" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Settlement...</text></switch></g><rect x="370" y="2272" width="731" height="368" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 733px; height: 368px; padding-top: 2272px; margin-left: 370px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 731px; height: 368px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">SiedlerBoard</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ SiedlerBoard(CardBank): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- bank: CardBank {readOnly}<br style="font-size: 12px;" />- textView: SiedlerBoardTextView {readOnly}<br style="font-size: 12px;" />- thiefPosition: Point</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- addPartialResourcePayout(Map&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt;, Faction, Resource, int): void<br style="font-size: 12px;" />- diceToLabel(int): Label<br style="font-size: 12px;" />- getExclusiveFieldFaction(List&lt;Settlement&gt;): Faction?<br style="font-size: 12px;" />- getFieldPayoutPerFaction(Resource, List&lt;Settlement&gt;, Map&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt;): int<br style="font-size: 12px;" />+ getFieldsForDiceValue(int): List&lt;Point&gt;<br style="font-size: 12px;" />+ getLandsForCorner(Point): List&lt;Land&gt;<br style="font-size: 12px;" />+ getResourcesToPayPerFaction(Integer, List&lt;Faction&gt;): Map&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt;<br style="font-size: 12px;" />- initialBoardSetup(): void<br style="font-size: 12px;" />- mergeFieldPayoutInto(Resource, Map&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt;, Map&lt;Faction, HashMap&lt;Resource, Integer&gt;&gt;): void<br style="font-size: 12px;" />+ setThiefPosition(Point): boolean<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="370" y="2284" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">SiedlerBoard...</text></switch></g><rect x="679" y="1857" width="381" height="214" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 383px; height: 214px; padding-top: 1857px; margin-left: 679px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 381px; height: 214px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">SiedlerBoardTextView</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ SiedlerBoardTextView(SiedlerBoard): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>- COORDINATE_COLUMN_SIZE: int {readOnly}</u><br style="font-size: 12px;" /><u>- Y_COORDINATE_PATTERN_REPETITION: int {readOnly}</u><br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- generateHexboardWithYCoordinates(StringBuilder, String): void<br style="font-size: 12px;" />- generateNormalRow(StringBuilder, String): void<br style="font-size: 12px;" />- generateRowWithYCoordinate(StringBuilder, String, int): void<br style="font-size: 12px;" />- generateXCoordinateRow(StringBuilder, int): void<br style="font-size: 12px;" />+ toString(): String</p></div></div></div></foreignObject><text x="679" y="1869" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">SiedlerBoardTextView...</text></switch></g><rect x="1170" y="2482" width="450" height="812" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 452px; height: 812px; padding-top: 2482px; margin-left: 1170px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 450px; height: 812px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><b style="font-size: 12px;">SiedlerGame</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ SiedlerGame(int, int): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;"><u>~ FOUR_TO_ONE_TRADE_OFFER: int {readOnly}<br style="font-size: 12px;" />~ FOUR_TO_ONE_TRADE_WANT: int {readOnly}</u><br style="font-size: 12px;" />- bank: CardBank {readOnly}<br style="font-size: 12px;" />- board: SiedlerBoard {readOnly}<br style="font-size: 12px;" />- currentPlayer: Player<br style="font-size: 12px;" />- currentPlayerIndex: int<br style="font-size: 12px;" />- players: Player[] {readOnly}<br style="font-size: 12px;" />- requiredWinPoints: int {readOnly}<br /></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- areCornersExclusivelyOwnedByCurrentPlayer(Settlement, Settlement): boolean<br style="font-size: 12px;" />+ buildCity(Point): boolean<br style="font-size: 12px;" />+ buildRoad(Point, Point): boolean<br style="font-size: 12px;" />+ buildSettlement(Point): boolean<br style="font-size: 12px;" />- createPlayers(int): Player[]<br style="font-size: 12px;" />- doesPlayerHaveRoadToCorner(Point): boolean<br style="font-size: 12px;" />- doesRoadMeetRequirements(Point, Point, boolean): boolean<br style="font-size: 12px;" />- doesSettlementMeetRequirements(Point, boolean): boolean<br style="font-size: 12px;" />+ getBank(): CardBank<br style="font-size: 12px;" />+ getBoard(): SiedlerBoard<br style="font-size: 12px;" />+ getCurrentPlayer(): Player<br style="font-size: 12px;" />+ getCurrentPlayerFaction(): Faction<br style="font-size: 12px;" />+ getCurrentPlayerIndex(): int<br style="font-size: 12px;" />+ getCurrentPlayerResourceStock(Resource): int<br style="font-size: 12px;" />+ getPlayerAmount(): int<br style="font-size: 12px;" />+ getPlayerFactions(): List&lt;Faction&gt;<br style="font-size: 12px;" />+ getRequiredWinPoints(): int<br style="font-size: 12px;" />+ getScoreboard(): HashMap&lt;Faction, Integer&gt;<br style="font-size: 12px;" />+ getWinner(): Faction<br style="font-size: 12px;" />- isCornerAdjacentToLand(Point): boolean<br style="font-size: 12px;" />- isCornerOnWater(Point): boolean<br style="font-size: 12px;" />+ placeInitialRoad(Point, Point): boolean<br style="font-size: 12px;" />+ placeInitialSettlement(Point, boolean): boolean<br style="font-size: 12px;" />+ placeThiefAndStealCard(Point): boolean<br style="font-size: 12px;" />+ switchToNextPlayer(): void<br style="font-size: 12px;" />+ switchToPreviousPlayer(): void<br style="font-size: 12px;" />+ throwDice(int): Map&lt;Faction, List&lt;Resource&gt;&gt;<br style="font-size: 12px;" />+ tradeWithBankFourToOne(Resource, Resource): boolean<br style="font-size: 12px;" />- translateFromMapToList(Map&lt;Resource, Integer&gt;): List&lt;Resource&gt;</p></div></div></div></foreignObject><text x="1170" y="2494" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">SiedlerGame...</text></switch></g><rect x="1440" y="594" width="289" height="293" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 291px; height: 293px; padding-top: 594px; margin-left: 1440px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left; width: 289px; height: 293px; overflow: hidden;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px; text-align: center; font-size: 12px;"><i style="font-size: 12px;">&lt;&lt;enumeration&gt;&gt;</i><br style="font-size: 12px;" /><b style="font-size: 12px;">Structure</b></p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">- Structure(List&lt;Resource&gt;, int): </p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ CITY: <br style="font-size: 12px;" />+ ROAD: <br style="font-size: 12px;" />+ SETTLEMENT: <br style="font-size: 12px;" />- costs: List&lt;Resource&gt;<br style="font-size: 12px;" />- stockPerPlayer: int</p><hr style="font-size: 12px;" /><p style="margin: 0px 0px 0px 4px; line-height: 1.6; font-size: 12px;">+ getCosts(): List&lt;Resource&gt;<br style="font-size: 12px;" />+ getCostsAsMap(): Map&lt;Resource, Integer&gt;<br style="font-size: 12px;" />+ getStockPerPlayer(): int<br style="font-size: 12px;" />+ valueOf(String): Structure<br style="font-size: 12px;" />+ values(): Structure[]</p></div></div></div></foreignObject><text x="1440" y="606" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><path d="M 970.47 4212.74 L 971.06 4160.45" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 975.26 4172.38 L 971.08 4159.33 L 966.6 4172.28" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 995.58 562.5 L 995.66 636.33 Q 995.67 646.33 1005.67 646.34 L 1187.76 646.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1175.88 650.82 L 1188.88 646.5 L 1175.89 642.15" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1737.76 474.33 L 1310.33 474.33 Q 1300.33 474.33 1300.33 464.33 L 1300.33 195.67 Q 1300.33 185.67 1290.33 185.61 L 1269 185.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1731.88 477.83 L 1738.88 474.33 L 1731.88 470.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 549.5 1452 L 549.66 1228.33 Q 549.67 1218.33 559.67 1218.33 L 618.33 1218.33 Q 628.33 1218.33 628.34 1208.33 L 628.5 986.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 632.82 998.12 L 628.5 985.12 L 624.16 998.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1472.5 3354 L 1472.4 3296.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1476.76 3308.11 L 1472.4 3295.12 L 1468.09 3308.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 440.36 634 L 440.34 608.33 Q 440.33 598.33 450.33 598.33 L 455.33 598.33 Q 460.33 598.33 460.37 588.33 L 460.47 564.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 464.76 576.14 L 460.48 563.12 L 456.09 576.1" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 246 634 L 246.24 608.33 Q 246.33 598.33 236.33 598.33 L 210.33 598.33 Q 200.33 598.33 200.38 588.33 L 200.49 564.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 204.77 576.14 L 200.49 563.12 L 196.1 576.1" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 697 1291.16 L 610.33 1291.02 Q 600.33 1291 600.33 1281 L 600.33 1221.33 C 604.23 1221.33 604.23 1215.33 600.33 1215.33 L 600.33 1215.33 L 600.33 1030.33 Q 600.33 1020.33 590.33 1020.3 L 506.24 1020.01" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 518.13 1015.72 L 505.12 1020 L 518.1 1024.38" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 960.24 1144 L 960.32 1064.33 Q 960.33 1054.33 970.33 1054.33 L 1015 1054.33 Q 1025 1054.33 1025 1044.33 L 1025 966.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1029.33 978.12 L 1025 965.12 L 1020.67 978.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 628.49 671.76 L 628.36 628.33 Q 628.33 618.33 638.33 618.33 L 679 618.33 Q 689 618.33 688.96 608.33 L 688.77 562" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 624.98 665.89 L 628.5 672.88 L 631.98 665.87" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 674.75 674 L 674.88 669.17 Q 675 664.33 685 664.33 L 1187.76 664.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1175.88 668.67 L 1188.88 664.33 L 1175.88 660" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1845.5 974 L 1845.66 739 Q 1845.67 729 1845.68 719 L 1845.92 486.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1850.24 498.12 L 1845.92 485.12 L 1841.58 498.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1517.88 1018.1 L 1343.67 1018.32 Q 1333.67 1018.33 1333.68 1008.33 L 1334 806.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1338.31 818.12 L 1334 805.12 L 1329.64 818.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1747.83 974 L 1747.7 940.33 Q 1747.67 930.33 1737.67 930.33 L 1594.33 930.33 Q 1584.33 930.33 1584.37 920.33 L 1584.49 889.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1588.78 901.13 L 1584.5 888.12 L 1580.11 901.1" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1845 1844 L 1845 1627 Q 1845 1617 1845.02 1607 L 1845.5 1392.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1849.8 1404.13 L 1845.5 1391.12 L 1841.14 1404.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1517.18 4447.36 L 1261 4447.66 Q 1251 4447.67 1251 4457.67 L 1251 4531 Q 1251 4541 1241 4540.99 L 989.73 4540.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1001.61 4536.52 L 988.61 4540.85 L 1001.61 4545.19" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1620.95 4404 L 1621 4266.33 Q 1621 4256.33 1611 4256.33 L 1358.33 4256.33 Q 1348.33 4256.33 1348.34 4246.33 L 1348.5 4111.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1352.82 4123.12 L 1348.5 4110.12 L 1344.15 4123.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1517.36 4418.4 L 1021.67 4418.33 Q 1011.67 4418.33 1011.68 4408.33 L 1011.91 4160.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1016.23 4172.12 L 1011.91 4159.12 L 1007.56 4172.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1695 4500.16 L 1870.33 4500.32 Q 1880.33 4500.33 1880.33 4490.33 L 1880.33 3515 Q 1880.33 3505 1870.33 3505 L 1637.24 3505" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1649.12 3500.67 L 1636.12 3505 L 1649.12 3509.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1682.54 4404 L 1682.35 4278.33 Q 1682.33 4268.33 1691.33 4268.33 L 1695.83 4268.33 Q 1700.33 4268.33 1700.31 4258.33 L 1700.01 4135.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1704.37 4147.11 L 1700 4134.12 L 1695.7 4147.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1695 4516.48 L 1900.33 4516.34 Q 1910.33 4516.33 1910.33 4506.33 L 1910.33 3070.33 Q 1910.33 3060.33 1900.33 3060.33 L 1622.69 3060.15" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1634.57 3055.82 L 1621.57 3060.14 L 1634.57 3064.49" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1279.75 1494 L 1279.67 1159 Q 1279.67 1149 1270 1149 L 1265.17 1149 Q 1260.33 1149 1260.33 1139 L 1260.08 805.19" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1264.42 817.06 L 1260.08 804.07 L 1255.76 817.07" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1101 2456 L 1120.33 2456.22 Q 1130.33 2456.33 1130.33 2446.33 L 1130.33 1884.33 Q 1130.33 1874.33 1140.33 1874.39 L 1157.76 1874.49" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1145.86 1878.75 L 1158.88 1874.49 L 1145.91 1870.09" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 552.75 2272 L 552.99 2001 Q 553 1991 563 1991 L 594.33 1991 Q 604.33 1991 604.33 1981 L 604.25 1712.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 608.59 1724.12 L 604.25 1711.12 L 599.92 1724.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2450px; margin-left: 571px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">«create»</div></div></div></foreignObject><text x="571" y="2461" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">«...</text></switch></g><path d="M 1079.07 2271.26 L 1079 1627.67 Q 1079 1617.67 1079 1607.67 L 1079 966.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1083.33 978.12 L 1079 965.12 L 1074.67 978.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1239.3 2478.75 L 1239.75 1919.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1244.07 1931.12 L 1239.75 1918.12 L 1235.41 1931.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1395 2482 L 1395 1946.33 Q 1395 1936.33 1405 1936.33 L 1616.33 1936.33 Q 1626.33 1936.33 1626.34 1926.33 L 1626.5 1392.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1630.83 1404.12 L 1626.5 1391.12 L 1622.16 1404.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1620 3004 L 2060.33 3004.33 Q 2070.33 3004.33 2070.33 2994.33 L 2070.33 1192.33 Q 2070.33 1182.33 2060.33 1182.33 L 1957.24 1182.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1969.12 1178 L 1956.12 1182.33 L 1969.12 1186.67" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1559.25 2482 L 1559.02 2387.67 Q 1559 2377.67 1558.96 2367.67 L 1558.6 2276.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1562.98 2288.36 L 1558.59 2275.38 L 1554.31 2288.4" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1620 2810.86 L 1733.67 2810.99 Q 1743.67 2811 1743.67 2801 L 1744 2326.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1748.32 2338.12 L 1744 2325.12 L 1739.66 2338.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1170 2915.61 L 745.67 2915.67 Q 735.67 2915.67 735.66 2905.67 L 735.5 2642.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 739.84 2654.12 L 735.5 2641.12 L 731.18 2654.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1590.01 591.76 L 1590.3 514.33 Q 1590.33 504.33 1580.33 504.33 L 1300.33 504.33 Q 1290.33 504.33 1290.33 494.33 L 1290.33 321 Q 1290.33 311 1280.33 311 L 1269 311" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1586.53 585.87 L 1590 592.88 L 1593.53 585.9" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1440 870.88 L 1421 870.96 Q 1411 871 1411 861 L 1411 709 Q 1411 699 1401 699 L 1384.24 699" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1396.12 694.67 L 1383.12 699 L 1396.12 703.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1083.54 4173.99 L 1083.64 4219 Q 1083.67 4229 1093.67 4229 L 1167.67 4229 Q 1177.67 4229 1177.64 4239 L 1177.51 4297.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1083.5 4158.99 L 1087.93 4166.48 L 1083.54 4173.99 L 1079.11 4166.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1171.03 4285.87 L 1177.5 4298.88 L 1184.03 4285.9" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 554.01 4397.84 L 545.17 4397.75 Q 536.33 4397.67 536.33 4387.67 L 536.33 4323 Q 536.33 4313 526.33 4313 L 505.24 4313" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 569.01 4397.99 L 561.47 4402.33 L 554.01 4397.84 L 561.56 4393.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 517.12 4306.5 L 504.12 4313 L 517.12 4319.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1700 3944 L 1700.31 3824.33 Q 1700.33 3814.33 1690.33 3814.33 L 1482.33 3814.33 Q 1472.33 3814.33 1472.34 3804.33 L 1472.48 3674.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1472.5 3657.12 L 1480.98 3674.13 L 1463.98 3674.11 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1348.5 3944 L 1348.35 3824.33 Q 1348.33 3814.33 1358.33 3814.33 L 1462.33 3814.33 Q 1472.33 3814.33 1472.34 3804.33 L 1472.48 3674.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1472.5 3657.12 L 1480.98 3674.13 L 1463.98 3674.11 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1005 3944 L 1005 3824.33 Q 1005 3814.33 1015 3814.33 L 1462.33 3814.33 Q 1472.33 3814.33 1472.34 3804.33 L 1472.48 3674.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1472.5 3657.12 L 1480.98 3674.13 L 1463.98 3674.11 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 777.5 4212 L 777.66 3824.33 Q 777.67 3814.33 787.67 3814.33 L 1462.33 3814.33 Q 1472.33 3814.33 1472.34 3804.33 L 1472.48 3674.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1472.5 3657.12 L 1480.98 3674.13 L 1463.98 3674.11 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1877.5 2414 L 1877.63 2379 Q 1877.67 2369 1867.67 2369 L 1802.33 2369 Q 1792.33 2369 1792.37 2359 L 1792.43 2342.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1792.5 2325.12 L 1800.93 2342.15 L 1783.93 2342.09 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1744 2162 L 1743.72 2104.33 Q 1743.67 2094.33 1753.67 2094.33 L 1835 2094.33 Q 1845 2094.33 1845 2084.33 L 1845 2029.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1845 2012.12 L 1853.5 2029.12 L 1836.5 2029.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1566.5 2209 L 1566.35 2104.33 Q 1566.33 2094.33 1576.33 2094.33 L 1835 2094.33 Q 1845 2094.33 1845 2084.33 L 1845 2029.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1845 2012.12 L 1853.5 2029.12 L 1836.5 2029.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1319.5 1832 L 1319.64 1781 Q 1319.67 1771 1329.67 1771 L 1369.67 1771 Q 1379.67 1771 1379.64 1761 L 1379.55 1728.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1379.5 1711.12 L 1388.05 1728.09 L 1371.05 1728.14 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 869.5 1857 L 869.5 1728.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 869.5 1711.12 L 878 1728.12 L 861 1728.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1517 1078 L 1389.67 1078.31 Q 1379.67 1078.33 1379.66 1088.33 L 1379.51 1475.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1379.5 1492.88 L 1371.01 1475.88 L 1388.01 1475.89 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 370 2548 L 342.33 2547.76 Q 332.33 2547.67 332.33 2537.67 L 332.01 1424.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 332 1407.12 L 340.51 1424.12 L 323.51 1424.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>